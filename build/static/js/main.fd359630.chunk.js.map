{"version":3,"sources":["components/Register.jsx","components/Login.jsx","components/Home.jsx","components/Quiz.jsx","components/Result.jsx","components/History.jsx","ProtectedRoute.js","App.js","index.js"],"names":["Register","useState","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","errorMsg","setErrorMsg","navigate","useNavigate","handleChange","e","target","name","value","a","preventDefault","setTimeout","fetch","method","headers","body","JSON","stringify","response","json","data","status","message","className","onSubmit","htmlFor","type","onChange","required","to","Login","localStorage","setItem","token","Home","category","setCategory","difficulty","setDifficulty","loading","setLoading","handleSelect","event","getItem","req","state","quizId","quizData","useEffect","jwt","decode","removeItem","Date","now","exp","color","height","width","onClick","Quiz","location","useLocation","quesNumber","setQuesNumber","answers","setAnswers","score","handleQuestionChange","length","handleQuestionSubmit","myScore","Object","keys","map","answer","index","correct_answers","correctAnswer","question","key","checked","Result","setScore","callResultData","History","setData","getHistory","item","date","toLocaleString","undefined","timeZone","_id","ProtectedRoute","children","replace","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd359630.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"./Register.css\";\r\n\r\n\r\nfunction Register() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"username\":\r\n        setUsername(value);\r\n        break;\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      case \"confirmPassword\":\r\n        setConfirmPassword(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setError(true);\r\n      setErrorMsg(\"Passwords do not match\");\r\n      setTimeout(() => {\r\n        setErrorMsg(\"\");\r\n        setError(false);\r\n      }, 5000);\r\n      return;\r\n    } else {\r\n      const response = await fetch(\"http://localhost:5000/api/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          email,\r\n          password,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.status === \"error\"){\r\n        setError(true);\r\n        setErrorMsg(data.message);\r\n        setTimeout(() => {\r\n          setErrorMsg(\"\");\r\n          setError(false);\r\n        }, 5000);\r\n        return;\r\n      }else{\r\n        navigate (\"/login\");\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"heading\">Welcome to QuizMe</div>\r\n\r\n      <form className=\"registerForm\" onSubmit={handleSubmit}>\r\n        <h2>Sign Up</h2>\r\n        <label htmlFor=\"username\">\r\n         Enter Name\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"email\">\r\n          Enter Email\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"password\">\r\n        Enter Password\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"confirmPassword\">\r\n          Confirm Password\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <button \r\n        type=\"submit\">Register</button>\r\n       \r\n        \r\n       <br/>\r\n       <div className=\"link\">\r\n          <Link to=\"/login\">Login</Link>\r\n          </div>\r\n        \r\n        {error && <div className=\"error\">{errorMsg}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const response = await fetch(\"http://localhost:5000/api/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.status === \"error\"){\r\n        setError(true);\r\n        setErrorMsg(data.message);\r\n        setTimeout(() => {\r\n          setErrorMsg(\"\");\r\n          setError(false);\r\n        }, 5000);\r\n        return;\r\n      }else{\r\n        localStorage.setItem(\"token\", data.token);\r\n        navigate(\"/\");\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"heading\">Quiz App</div>\r\n\r\n      <form className=\"loginForm\" onSubmit={handleSubmit}>\r\n        <h2>Login</h2>\r\n        <label htmlFor=\"email\">\r\n         Enter Email\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"password\">\r\n           Enter Password\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <button type=\"submit\">Login</button>\r\n        <div className=\"link2\">\r\n           <Link to=\"/register\">Register</Link></div>\r\n        \r\n         {/* <Link to=\"/register\">register</Link> */}\r\n        {/* <br /><br /> */}\r\n        {error && <div className=\"error\">{errorMsg}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home() {\r\n  const [category, setCategory] = useState(\"Random\");\r\n  const [difficulty, setDifficulty] = useState(\"Easy\");\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  function handleSelect(event) {\r\n    const { name, value } = event.target;\r\n    if (name === \"category\") {\r\n      setCategory(value);\r\n    } else {\r\n      setDifficulty(value);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    const req = await fetch(\"http://localhost:5000/api/quiz\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify({\r\n        category: category,\r\n        difficulty: difficulty,\r\n      }),\r\n    });\r\n\r\n    const data = await req.json();\r\n    setLoading(false);\r\n    if (data.status === \"ok\") {\r\n      navigate(\"/quiz\", {state:{quizId: data.quizId,quizData: data.quizData}})\r\n\r\n   \r\n    } else {\r\n      setError(true);\r\n      setErrorMsg(data.message);\r\n      setTimeout(() => {\r\n        navigate(\r\n          \"/login\",\r\n        );\r\n      }, 1000);\r\n      return;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const email = jwt.decode(token);\r\n      if (!email) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/login\");\r\n      }\r\n      if (Date.now() > jwt.decode(token).exp * 1000) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/login\");\r\n      }\r\n    } else {\r\n      localStorage.removeItem(\"token\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  function viewHistory(){\r\n  navigate(\r\n     \"/history\",\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {loading ? (\r\n        <Loader\r\n          className=\"loader\"\r\n          type=\"Grid\"\r\n          color=\"#fff\"\r\n          height={100}\r\n          width={100}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <h1 className=\"heading\"> Quiz App </h1>\r\n          <p className=\"heading2\">Let's Start a new Quiz</p>\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <label htmlFor=\"category\">Select Category</label>\r\n            <br />\r\n            <select\r\n              className=\"category\"\r\n              name=\"category\"\r\n              value={category}\r\n              onChange={handleSelect}\r\n            >\r\n              <option value=\"Random\">Random</option>\r\n              <option value=\"linux\">Linux</option>\r\n              <option value=\"devops\">DevOps</option>\r\n              <option value=\"docker\">Docker</option>\r\n              <option value=\"bash\">Bash</option>\r\n              <option value=\"sql\">SQL</option>\r\n              <option value=\"cms\">CMS</option>\r\n              <option value=\"code\">Code</option>\r\n            </select>\r\n            <br />\r\n            <label htmlFor=\"difficulty\">Select Difficulty</label>\r\n            <br />\r\n            <select\r\n              className=\"difficulty\"\r\n              name=\"difficulty\"\r\n              value={difficulty}\r\n              onChange={handleSelect}\r\n            >\r\n              <option value=\"easy\">Easy</option>\r\n              <option value=\"medium\">Medium</option>\r\n              <option value=\"hard\">Hard</option>\r\n            </select>\r\n            <br />\r\n            <button className=\"start\" type=\"submit\">\r\n              Start Quiz\r\n            </button>\r\n            {error && <div className=\"error\">{errorMsg}</div>}\r\n          </form>\r\n          <div className=\"btns\">\r\n            <button\r\n              className=\"logout\"\r\n              onClick={() => {localStorage.removeItem(\"token\");\r\n              navigate(\"/login\")}}\r\n            >\r\n              Logout\r\n            </button>\r\n            <button className=\"history\" onClick={viewHistory}>View History</button>\r\n            </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport \"./Quiz.css\";\r\n\r\nfunction Quiz() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const quizData = location.state.quizData;\r\n  const quizId = location.state.quizId;\r\n  const [quesNumber, setQuesNumber] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  let score = 0;\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const data = jwt.decode(token);\r\n      if (!data.email) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/login\");\r\n      }\r\n      if (Date.now() > jwt.decode(token).exp * 1000) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/login\");\r\n      }\r\n    } else {\r\n      localStorage.removeItem(\"token\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  function handleQuestionChange(event) {\r\n    event.preventDefault();\r\n    if (event.target.name === \"prev\" && quesNumber > 0) {\r\n      setQuesNumber(quesNumber - 1);\r\n    }\r\n    if (event.target.name === \"next\" && quesNumber < quizData.length - 1) {\r\n      setQuesNumber(quesNumber + 1);\r\n    }\r\n  }\r\n\r\n  function handleQuestionSubmit(event) {\r\n    setAnswers({ ...answers, [quesNumber]: event.target.name });\r\n  }\r\n\r\n  async function handleResult() {\r\n    let myScore = 0;\r\n    setLoading(true);\r\n    Object.keys(answers).map((answer, index) => {\r\n      Object.keys(quizData[index].correct_answers).map((correctAnswer) => {\r\n        if (\r\n          quizData[index].correct_answers[correctAnswer] === \"true\" &&\r\n          answers[answer] + \"_correct\" === correctAnswer\r\n        ) {\r\n          myScore += 1;\r\n        }\r\n      });\r\n    });\r\n    score = score + myScore;\r\n\r\n    const req = await fetch(\"http://localhost:5000/api/result\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify({\r\n        quizId: quizId,\r\n        score: score,\r\n      }),\r\n    });\r\n\r\n    const data = await req.json();\r\n    setLoading(false);\r\n    if (data.status === \"ok\") {\r\n      \r\n      navigate(\"/result\", {state:{quizId:quizId}})\r\n    } else {\r\n      setError(true);\r\n      setErrorMsg(data.message);\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader\r\n          className=\"loader\"\r\n          type=\"Grid\"\r\n          color=\"#fff\"\r\n          height={100}\r\n          width={100}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <h1 className=\"heading\">Technical Quiz</h1>\r\n          <div className=\"question-form\">\r\n            <div className=\"question\">\r\n              {quesNumber + 1}. {quizData[quesNumber].question}\r\n            </div>\r\n            {Object.keys(quizData[quesNumber].answers).map((key) => {\r\n              if (quizData[quesNumber].answers[key] !== null)\r\n                return (\r\n                  <div className=\"option\" key={key}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={key}\r\n                      value={quizData[quesNumber].answers[key]}\r\n                      checked={answers[quesNumber] === key}\r\n                      onChange={handleQuestionSubmit}\r\n                    />\r\n                    <label htmlFor={key}>\r\n                      {quizData[quesNumber].answers[key]}\r\n                    </label>\r\n                  </div>\r\n                );\r\n            })}\r\n            <div className=\"btns\">\r\n              <button\r\n                name=\"prev\"\r\n                onClick={handleQuestionChange}\r\n                className=\"prev-button\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <button\r\n                name=\"next\"\r\n                onClick={handleQuestionChange}\r\n                className=\"next-button\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n            {error && <div className=\"error\">{errorMsg}</div>}\r\n          </div>\r\n          {quesNumber === quizData.length - 1 && (\r\n            <button className=\"submit-button\" onClick={handleResult}>\r\n              Submit\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport \"./Result.css\";\r\n\r\nfunction Result() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const quizId = location.state.quizId;\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [score, setScore] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const data = jwt.decode(token);\r\n      if (!data.email) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/login\");\r\n      }\r\n      if (Date.now() > jwt.decode(token).exp * 1000) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/login\");\r\n      } else {\r\n        callResultData();\r\n      }\r\n    } else {\r\n      localStorage.removeItem(\"token\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  async function callResultData() {\r\n    const req = await fetch(\"http://localhost:5000/api/result/\" + quizId, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n\r\n    const data = await req.json();\r\n    if (data.status === \"ok\") {\r\n      setError(false);\r\n      setScore(data.score);\r\n    } else {\r\n      setError(true);\r\n      setErrorMsg(data.message);\r\n      navigate(\"/login\");\r\n    }\r\n  }\r\n\r\n  function goBack() {\r\n    navigate(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      <h1 className=\"heading\">Here is your Score</h1>\r\n      <div className=\"score\">\r\n        <p>Your Score is {score} out of 10</p>\r\n        <button onClick={goBack}>Go To Home Page</button>\r\n      </div>\r\n      {error && <div className=\"error\">{errorMsg}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport \"./History.css\";\r\n\r\nfunction History() {\r\n  const navigate= useNavigate();\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const data = jwt.decode(token);\r\n      if (!data.email) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/login\");\r\n      }\r\n      if (Date.now() > jwt.decode(token).exp * 1000) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/login\");\r\n      } else {\r\n        getHistory();\r\n      }\r\n    } else {\r\n      localStorage.removeItem(\"token\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  async function getHistory() {\r\n    const req = await fetch(\"http://localhost:5000/api/history\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n\r\n    const data = await req.json();\r\n    if (data.status === \"ok\") {\r\n      setError(false);\r\n      setData(data.data);\r\n    } else {\r\n      setError(true);\r\n      setErrorMsg(data.message);\r\n      navigate(\"/login\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"heading\"> Quiz App</h1>\r\n      <div className=\"data\">\r\n        <h2 className=\"heading2\">Hers's Your Quiz History</h2>\r\n        {data.map((item) => (\r\n          <div className=\"data-item\" key={item._id}>\r\n            <h3 className=\"date\">\r\n            Taken on {new Date(item.date).toLocaleString(undefined, {timeZone: 'Asia/Kolkata'})}\r\n            </h3>\r\n            <h3 className=\"info\">\r\n              <span className=\"title\">Category</span>\r\n              <span className=\"value\">{item.category}</span>\r\n            </h3>\r\n            <h3 className=\"info\">\r\n              <span className=\"title\">Difficulty</span>\r\n              <span className=\"value\">{item.difficulty}</span>\r\n            </h3>\r\n            <h3 className=\"info\">\r\n              <span className=\"title\">Score</span>\r\n              <span className=\"value\">{item.score}</span>\r\n            </h3>\r\n          </div>\r\n        ))}\r\n        <button className=\"btn\" onClick={() => navigate(\"/\")}>\r\n            Back\r\n        </button>\r\n        {error && <div className=\"error\">{errorMsg}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","import React from \"react\";\r\nimport {  useState } from 'react';\r\nimport { Navigate } from \"react-router-dom\";\r\nconst ProtectedRoute = ({ children}) => {\r\nconst [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n\r\nif (!token) {\r\n     return <Navigate to=\"/\" replace />;\r\n   }\r\n \r\n   return children;\r\n};\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport Register from './components/Register';\r\nimport Login from './components/Login';\r\nimport Home from './components/Home';\r\nimport Quiz from './components/Quiz';\r\nimport Result from './components/Result';\r\nimport History from './components/History';\r\nimport ProtectedRoute from './ProtectedRoute';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/quiz\" element={\r\n\r\n            <Quiz />\r\n\r\n          }>\r\n          </Route>\r\n          <Route path=\"/result\" element={<ProtectedRoute>\r\n            <Result />\r\n          </ProtectedRoute>}>\r\n          </Route>\r\n          <Route path=\"/history\" element={<ProtectedRoute>\r\n            <History />\r\n          </ProtectedRoute>}>\r\n          </Route>\r\n\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}