{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasir\\\\OneDrive\\\\Documents\\\\srilatha kasireddy\\\\Quizme-frontend\\\\client\\\\src\\\\components\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./Register.css\";\nimport { MdAccountCircle, MdEmail, MdOutlineLock } from \"react-icons/md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const history = useHistory();\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n\n    switch (name) {\n      case \"username\":\n        setUsername(value);\n        break;\n\n      case \"email\":\n        setEmail(value);\n        break;\n\n      case \"password\":\n        setPassword(value);\n        break;\n\n      case \"confirmPassword\":\n        setConfirmPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setError(true);\n      setErrorMsg(\"Passwords do not match\");\n      setTimeout(() => {\n        setErrorMsg(\"\");\n        setError(false);\n      }, 5000);\n      return;\n    } else {\n      const response = await fetch(\"http://localhost:5000/api/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n\n      if (data.status === \"error\") {\n        setError(true);\n        setErrorMsg(data.message);\n        setTimeout(() => {\n          setErrorMsg(\"\");\n          setError(false);\n        }, 5000);\n        return;\n      } else {\n        history.push(\"/login\");\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: \"Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"registerForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: [/*#__PURE__*/_jsxDEV(MdAccountCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), \" Enter Name\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(MdEmail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), \" Enter Email\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(MdOutlineLock, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), \" Enter Password\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(MdOutlineLock, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), \" Confirm Password\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 49\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"ASMxZBKDFmtc5mX0p/jzpkNzeSo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/kasir/OneDrive/Documents/srilatha kasireddy/Quizme-frontend/client/src/components/Register.jsx"],"names":["React","useState","Link","useHistory","MdAccountCircle","MdEmail","MdOutlineLock","Register","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","errorMsg","setErrorMsg","history","handleChange","e","name","value","target","handleSubmit","preventDefault","setTimeout","response","fetch","method","headers","body","JSON","stringify","data","json","status","message","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./Register.css\";\r\nimport { MdAccountCircle, MdEmail, MdOutlineLock } from \"react-icons/md\";\r\n\r\nfunction Register() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"username\":\r\n        setUsername(value);\r\n        break;\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      case \"confirmPassword\":\r\n        setConfirmPassword(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setError(true);\r\n      setErrorMsg(\"Passwords do not match\");\r\n      setTimeout(() => {\r\n        setErrorMsg(\"\");\r\n        setError(false);\r\n      }, 5000);\r\n      return;\r\n    } else {\r\n      const response = await fetch(\"http://localhost:5000/api/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          email,\r\n          password,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.status === \"error\"){\r\n        setError(true);\r\n        setErrorMsg(data.message);\r\n        setTimeout(() => {\r\n          setErrorMsg(\"\");\r\n          setError(false);\r\n        }, 5000);\r\n        return;\r\n      }else{\r\n        history.push(\"/login\");\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"heading\">Quiz App</div>\r\n\r\n      <form className=\"registerForm\" onSubmit={handleSubmit}>\r\n        <h1>Sign Up</h1>\r\n        <label htmlFor=\"username\">\r\n          <MdAccountCircle /> Enter Name\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"email\">\r\n          <MdEmail /> Enter Email\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"password\">\r\n          <MdOutlineLock /> Enter Password\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"confirmPassword\">\r\n          <MdOutlineLock /> Confirm Password\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <button type=\"submit\">Register</button> <Link to=\"/login\">Login</Link>\r\n        {error && <div className=\"error\">{errorMsg}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}